#
# This file was generated automatically, please don't modify it unless you know what you're doing
#
---
version: "2"
services:
    {%- if services %}
    api:
        {%- if build %}
        build: "{{services.api.buildpath}}"
        {%- endif %}
        image: "jagereye/api:{{services.api.version}}"
        network_mode: "{{services.api.network_mode}}"
        ports:
            {%- for _, port in services.api.ports.items() %}
            - "{{port}}"
            {%- endfor %}
        depends_on:
            - database
            - messaging
            - mem_db
            {%- if apps %}
            {%- for app, _ in apps.items() %}
            - {{app}}
            {%- endfor %}
            {%- endif %}
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
    res_mgr:
        {%- if build %}
        build: "{{services.res_mgr.buildpath}}"
        {%- endif %}
        image: "jagereye/res_mgr:{{services.res_mgr.version}}"
        network_mode: "{{services.res_mgr.network_mode}}"
        volumes:
            {%- for _, volume in services.res_mgr.volumes.items() %}
            - "{{volume}}"
            {%- endfor %}
        depends_on:
            - messaging
            - mem_db
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
            - SHARED_ROOT={{environ.SHARED_ROOT}}
    database:
        {%- if build %}
        build: "{{services.database.buildpath}}"
        {%- endif %}
        image: "jagereye/database:{{services.database.version}}"
        network_mode: "{{services.database.network_mode}}"
        ports:
            {%- for key, port in services.database.ports.items() %}
            - "{{port}}"
            {%- endfor %}
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
    messaging:
        {%- if build %}
        build: "{{services.messaging.buildpath}}"
        {%- endif %}
        image: "jagereye/messaging:{{services.messaging.version}}"
        network_mode: "{{services.messaging.network_mode}}"
        ports:
            {%- for key, port in services.messaging.ports.items() %}
            - "{{port}}"
            {%- endfor %}
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
    mem_db:
        {%- if build %}
        build: "{{services.mem_db.buildpath}}"
        {%- endif %}
        image: "jagereye/mem_db:{{services.mem_db.version}}"
        network_mode: "{{services.mem_db.network_mode}}"
        ports:
            {%- for key, port in services.mem_db.ports.items() %}
            - "{{port}}"
            {%- endfor %}
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
    {%- endif %}
    {%- if apps %}
    {%- for app, content in apps.items() %}
    {{app}}:
        image: "jagereye/brain_{{app}}"
        network_mode: "{{content.network_mode}}"
        {%- if services %}
        depends_on:
            - res_mgr
            - database
            - messaging
            - mem_db
        {%- endif %}
        environment:
            - JAGERENV="{{environ.JAGERENV}}"
        {%- if environ.JAGERENV == 'product' %}
        command: "brain.py 2>&1| logger -n {{logging.syslog.host}} -P {{logging.syslog.port}} -p local1.error -t 'brain:third_party' --rfc5424=nohost"
        {%- endif %}
    {%- endfor %}
    {%- endif %}
